// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
    // If you want to use Prisma Migrate, you will need to manually create a shadow database
    // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
    // make sure to append ?connect_timeout=10 to the connection string
    // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

model User {
    id String @id @default(cuid())

    name     String
    email    String
    password String
    phone    String
    area     String
    role     String @default("user")
    project  String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Resident {
    id String @id @default(cuid())

    name       String
    socialName String
    birthDate  DateTime
    birthPlace String?
    gender     String

    race     String?
    religion String?

    susCard String?
    phone   String?

    isChild        Boolean @default(false)
    children       Int?
    agesOfChildren Int[]   @default([])

    // SOMENTE PARA CRIANCA
    class         String?
    responsibleId String?
    responsible   Resident?  @relation("PersonResponsibility", fields: [responsibleId], references: [id])
    childrenList  Resident[] @relation("PersonResponsibility")

    // TODO: PASS TO ANOTHER TABLE 
    profession                   String?
    maritalStatus                String?
    liveTogether                 String?
    schooling                    String?
    healthPlan                   String?
    conditionsAccessTreatedWater String?
    accessToTreatedWater         Boolean?
    accessToSewage               Boolean?

    status    String   @default("active")
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Dental_Anamnesis_GAIA_1  Dental_Anamnesis_GAIA_1[]
    Medical_Anamnesis_GAIA_1 Medical_Anamnesis_GAIA_1[]
    Medical_Care_GAIA_1      Medical_Care_GAIA_1[]
    Nutritional_Form_GAIA_1  Nutritional_Form_GAIA_1[]
}

model Dental_Anamnesis_GAIA_1 {
    id     String @id @default(cuid())
    userId String @unique

    complaint               String?
    isToothache             String?
    isGumPain               String?
    isGumsBleedWhenBrushing String?
    isUseToothpaste         String?
    isUseDentalFloss        String?
    brushingFrequency       String?
    brushType               String?
    brushChange             String?
    isUsePacifier           String?
    eatingHabits            String?
    isAllergic              String?
    allergy                 String?

    dentalTreatmentStatus String?
    dentalTreatment       String?

    gum          String?
    gumObs       String?
    jugalMucosa  String?
    jugalObs     String?
    palate       String?
    palateObs    String?
    floor        String?
    floorObs     String?
    tongue       String?
    tongueObs    String?
    fluorosis    String?
    fluorosisObs String?

    teeth Json[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    resident Resident                        @relation(fields: [userId], references: [id], onDelete: Cascade)
    tooth    Dental_Anamnesis_Tooth_GAIA_1[]
}

model Dental_Anamnesis_Tooth_GAIA_1 {
    id                 String  @id @default(cuid())
    dentalAnamnesis_Id String?

    label       String?
    zone        String?
    observation String?

    createdAt               DateTime                 @default(now())
    updatedAt               DateTime                 @updatedAt
    Dental_Anamnesis_GAIA_1 Dental_Anamnesis_GAIA_1? @relation(fields: [dentalAnamnesis_Id], references: [id])
}

model Medical_Anamnesis_GAIA_1 {
    id     String @id @default(cuid())
    userId String

    bloodType    String?
    priorIllness String?

    previousHospitalizations          String?
    reasonForPreviousHospitalizations String?
    previousSurgeries                 String?
    reasonForPreviousSurgeries        String?

    injuries String?

    allergies String?
    allergy   String?

    familyDiseases String?

    physicalActivity String?
    smoking          String?
    smokersOf        String?

    etilismo              String?
    vaccineScheduleUpdate String?
    typeOfHouse           String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    resident Resident @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Medical_Care_GAIA_1 {
    id     String @id @default(cuid())
    userId String

    date            String?
    weight          String?
    height          String?
    imc             String?
    blood_pressure  String?
    chief_complaint String?
    evolution       String?
    isda            String?

    physical_exam            String?
    general                  String?
    cardiac_auscultation     String?
    respiratory_auscultation String?
    abdominal                String?
    hipotese_diagnostica     String?
    conduct                  String?

    medic String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    resident Resident @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Nutritional_Form_GAIA_1 {
    id String @id @default(cuid())

    userId String

    hg      String?
    ht      String?
    tg      String?
    HDL     String?
    LDL     String?
    glucose String?

    income_food          String?
    type_housing         String?
    pay_rent             String?
    nutritionist_visit   String?
    health_problem       String?
    previous_pathologies String?
    family_background    String?

    use_medicine   String?
    what_medicines String?

    intestine_functioning_regularly String?
    bowel_movements_day             String?
    consistency                     String?
    coloring                        String?
    liters__water_consumed_per_day  String?
    food_frequency                  String?
    food_allergy_or_intolerance     String?
    which_food                      String?
    food_aversion                   String?
    use_nutritional_supplements     String?

    weight  String?
    stature String?
    imc     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    resident Resident @relation(fields: [userId], references: [id], onDelete: Cascade)
}
